{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfani Media\\\\Desktop\\\\part3\\\\would-you-rather\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Tab } from 'semantic-ui-react';\nimport UserCard from './UserCard';\nexport class Home extends Component {\n  render() {\n    const {\n      userQuestionData\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Tab, {\n      panes: panes({\n        userQuestionData\n      }),\n      className: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\nHome.propTypes = {\n  userQuestionData: PropTypes.object.isRequired\n};\n\nconst panes = props => {\n  const {\n    userQuestionData\n  } = props;\n  return [{\n    menuItem: 'Unanswered',\n    render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, userQuestionData.answered.map(question => /*#__PURE__*/React.createElement(UserCard, {\n      key: question.id,\n      question_id: question.id,\n      unanswered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    })))\n  }, {\n    menuItem: 'Answered',\n    render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, userQuestionData.unanswered.map(question => /*#__PURE__*/React.createElement(UserCard, {\n      key: question.id,\n      question_id: question.id,\n      unanswered: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    })))\n  }];\n};\n\nfunction mapStateToProps({\n  authUser,\n  users,\n  questions\n}) {\n  const answeredIds = Object.keys(users[authUser].answers);\n  const answered = Object.values(questions).filter(question => !answeredIds.includes(question.id)).sort((a, b) => b.timestamp - a.timestamp);\n  const unanswered = Object.values(questions).filter(question => answeredIds.includes(question.id)).sort((a, b) => b.timestamp - a.timestamp);\n  return {\n    userQuestionData: {\n      answered,\n      unanswered\n    }\n  };\n}\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["C:/Users/Alfani Media/Desktop/part3/would-you-rather/src/components/Home.js"],"names":["React","Component","PropTypes","connect","Tab","UserCard","Home","render","userQuestionData","props","panes","propTypes","object","isRequired","menuItem","answered","map","question","id","unanswered","mapStateToProps","authUser","users","questions","answeredIds","Object","keys","answers","values","filter","includes","sort","a","b","timestamp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport UserCard from './UserCard';\r\n\r\nexport class Home extends Component {\r\n  static propTypes = {\r\n    userQuestionData: PropTypes.object.isRequired\r\n  };\r\n  render() {\r\n    const { userQuestionData } = this.props;\r\n\r\n    return <Tab panes={panes({ userQuestionData })} className=\"tab\" />;\r\n  }\r\n}\r\n\r\nconst panes = props => {\r\n  const { userQuestionData } = props;\r\n  return [\r\n    {\r\n      menuItem: 'Unanswered',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          {userQuestionData.answered.map(question => (\r\n            <UserCard\r\n              key={question.id}\r\n              question_id={question.id}\r\n              unanswered={true}\r\n            />\r\n          ))}\r\n        </Tab.Pane>\r\n      )\r\n    },\r\n    {\r\n      menuItem: 'Answered',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          {userQuestionData.unanswered.map(question => (\r\n            <UserCard\r\n              key={question.id}\r\n              question_id={question.id}\r\n              unanswered={false}\r\n            />\r\n          ))}\r\n        </Tab.Pane>\r\n      )\r\n    }\r\n  ];\r\n};\r\n\r\nfunction mapStateToProps({ authUser, users, questions }) {\r\n  const answeredIds = Object.keys(users[authUser].answers);\r\n  const answered = Object.values(questions)\r\n    .filter(question => !answeredIds.includes(question.id))\r\n    .sort((a, b) => b.timestamp - a.timestamp);\r\n  const unanswered = Object.values(questions)\r\n    .filter(question => answeredIds.includes(question.id))\r\n    .sort((a, b) => b.timestamp - a.timestamp);\r\n\r\n  return {\r\n    userQuestionData: {\r\n      answered,\r\n      unanswered\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home);"]},"metadata":{},"sourceType":"module"}