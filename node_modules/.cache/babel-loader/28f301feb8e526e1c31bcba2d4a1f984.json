{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfani Media\\\\Desktop\\\\part3\\\\would-you-rather\\\\src\\\\components\\\\NewQuestion.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Segment, Header, Grid, Divider, Form, Dimmer, Loader } from 'semantic-ui-react';\nimport { handleSaveQuestion } from '../actions/questions';\nexport class NewQuestion extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validSubmit: false,\n      isLoading: false,\n      option1: '',\n      option2: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        authUser,\n        handleSaveQuestion\n      } = this.props;\n      const {\n        option1,\n        option2\n      } = this.state;\n      new Promise((res, rej) => {\n        this.setState({\n          isLoading: true\n        });\n        handleSaveQuestion(option1, option2, authUser);\n        setTimeout(() => res('success'), 1000);\n      }).then(() => {\n        this.setState({\n          option1: '',\n          option2: ''\n        });\n        this.setState({\n          validSubmit: true\n        });\n      });\n    };\n  }\n\n  render() {\n    const disabled = this.state.option1 === '' || this.state.option2 === '';\n\n    if (this.state.validSubmit === true) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Segment.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h3\",\n      textAlign: \"left\",\n      block: true,\n      attached: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Create a New Poll\"), /*#__PURE__*/React.createElement(Grid, {\n      padded: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, this.state.isLoading && /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      content: \"Updating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Complete the question:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, \"Would you rather...\")), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      id: \"option1\",\n      placeholder: \"Enter option one...\",\n      value: this.state.option1,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      horizontal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \"Or\"), /*#__PURE__*/React.createElement(Form.Input, {\n      id: \"option2\",\n      placeholder: \"Enter option two...\",\n      value: this.state.option2,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      positive: true,\n      size: \"tiny\",\n      fluid: true,\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"Submit\")))));\n  }\n\n}\nNewQuestion.propTypes = {\n  authUser: PropTypes.string.isRequired,\n  handleSaveQuestion: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps({\n  authUser\n}) {\n  return {\n    authUser\n  };\n}\n\nexport default connect(mapStateToProps, {\n  handleSaveQuestion\n})(NewQuestion);","map":{"version":3,"sources":["C:/Users/Alfani Media/Desktop/part3/would-you-rather/src/components/NewQuestion.js"],"names":["React","Component","PropTypes","Redirect","connect","Segment","Header","Grid","Divider","Form","Dimmer","Loader","handleSaveQuestion","NewQuestion","state","validSubmit","isLoading","option1","option2","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","authUser","props","Promise","res","rej","setTimeout","then","render","disabled","propTypes","string","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Segment,\r\n  Header,\r\n  Grid,\r\n  Divider,\r\n  Form,\r\n  Dimmer,\r\n  Loader\r\n} from 'semantic-ui-react';\r\nimport { handleSaveQuestion } from '../actions/questions';\r\n\r\nexport class NewQuestion extends Component {\r\n  static propTypes = {\r\n    authUser: PropTypes.string.isRequired,\r\n    handleSaveQuestion: PropTypes.func.isRequired\r\n  };\r\n  state = {\r\n    validSubmit: false,\r\n    isLoading: false,\r\n    option1: '',\r\n    option2: ''\r\n  };\r\n  handleChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { authUser, handleSaveQuestion } = this.props;\r\n    const { option1, option2 } = this.state;\r\n\r\n    new Promise((res, rej) => {\r\n      this.setState({ isLoading: true });\r\n      handleSaveQuestion(option1, option2, authUser);\r\n      setTimeout(() => res('success'), 1000);\r\n    }).then(() => {\r\n      this.setState({\r\n        option1: '',\r\n        option2: ''\r\n      });\r\n      this.setState({ validSubmit: true });\r\n    });\r\n  };\r\n  render() {\r\n    const disabled = this.state.option1 === '' || this.state.option2 === '';\r\n\r\n    if (this.state.validSubmit === true) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <Segment.Group>\r\n        <Header as=\"h3\" textAlign=\"left\" block attached=\"top\">\r\n          Create a New Poll\r\n        </Header>\r\n        <Grid padded>\r\n          <Grid.Column>\r\n            {this.state.isLoading && (\r\n              <Dimmer active inverted>\r\n                <Loader content=\"Updating\" />\r\n              </Dimmer>\r\n            )}\r\n            <p>Complete the question:</p>\r\n            <p>\r\n              <strong>Would you rather...</strong>\r\n            </p>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Input\r\n                id=\"option1\"\r\n                placeholder=\"Enter option one...\"\r\n                value={this.state.option1}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n              <Divider horizontal>Or</Divider>\r\n              <Form.Input\r\n                id=\"option2\"\r\n                placeholder=\"Enter option two...\"\r\n                value={this.state.option2}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n              <Form.Button positive size=\"tiny\" fluid disabled={disabled}>\r\n                Submit\r\n              </Form.Button>\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment.Group>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authUser }) {\r\n  return {\r\n    authUser\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { handleSaveQuestion }\r\n)(NewQuestion);\r\n"]},"metadata":{},"sourceType":"module"}