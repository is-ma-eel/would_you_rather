{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfani Media\\\\Desktop\\\\part3\\\\would-you-rather\\\\src\\\\components\\\\VoteQuestion.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Header, Button, Form, Radio } from 'semantic-ui-react';\nimport { handleSaveQuestionAnswer } from '../actions/users';\nexport class PollQuestion extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: ''\n    };\n\n    this.handleChange = (e, {\n      value\n    }) => this.setState({\n      value\n    });\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.value !== '') {\n        const {\n          authUser,\n          question,\n          handleSaveQuestionAnswer\n        } = this.props;\n        handleSaveQuestionAnswer(authUser, question.id, this.state.value);\n      }\n    };\n  }\n\n  render() {\n    const {\n      question\n    } = this.props;\n    const disabled = this.state.value === '' ? true : false;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"Would you rather\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      label: question.optionOne.text,\n      name: \"radioGroup\",\n      value: \"optionOne\",\n      checked: this.state.value === 'optionOne',\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Radio, {\n      label: question.optionTwo.text,\n      name: \"radioGroup\",\n      value: \"optionTwo\",\n      checked: this.state.value === 'optionTwo',\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"green\",\n      size: \"tiny\",\n      fluid: true,\n      positive: true,\n      disabled: disabled,\n      content: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\nPollQuestion.propTypes = {\n  authUser: PropTypes.string.isRequired,\n  handleSaveQuestionAnswer: PropTypes.func.isRequired,\n  question: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps({\n  authUser\n}, {\n  match\n}) {\n  // const { question_id } = match.params;\n  // const question = questions[question_id];\n  return {\n    authUser\n  };\n}\n\nexport default connect(mapStateToProps, {\n  handleSaveQuestionAnswer\n})(PollQuestion); // export default PollQuestion;","map":{"version":3,"sources":["C:/Users/Alfani Media/Desktop/part3/would-you-rather/src/components/VoteQuestion.js"],"names":["React","Component","Fragment","PropTypes","connect","Header","Button","Form","Radio","handleSaveQuestionAnswer","PollQuestion","state","value","handleChange","e","setState","handleSubmit","preventDefault","authUser","question","props","id","render","disabled","optionOne","text","optionTwo","propTypes","string","isRequired","func","object","mapStateToProps","match"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Header, Button, Form, Radio } from 'semantic-ui-react';\r\nimport { handleSaveQuestionAnswer } from '../actions/users';\r\n\r\nexport class PollQuestion extends Component {\r\n  static propTypes = {\r\n    authUser: PropTypes.string.isRequired,\r\n    handleSaveQuestionAnswer: PropTypes.func.isRequired,\r\n    question: PropTypes.object.isRequired\r\n  };\r\n  state = {\r\n    value: ''\r\n  };\r\n\r\n  handleChange = (e, { value }) => this.setState({ value });\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.value !== '') {\r\n      const { authUser, question, handleSaveQuestionAnswer } = this.props;\r\n      handleSaveQuestionAnswer(authUser, question.id, this.state.value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { question } = this.props;\r\n    const disabled = this.state.value === '' ? true : false;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header as=\"h4\">Would you rather</Header>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Field>\r\n            <Radio\r\n              label={question.optionOne.text}\r\n              name=\"radioGroup\"\r\n              value=\"optionOne\"\r\n              checked={this.state.value === 'optionOne'}\r\n              onChange={this.handleChange}\r\n            />\r\n            <br />\r\n            <Radio\r\n              label={question.optionTwo.text}\r\n              name=\"radioGroup\"\r\n              value=\"optionTwo\"\r\n              checked={this.state.value === 'optionTwo'}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Button\r\n              color=\"green\"\r\n              size=\"tiny\"\r\n              fluid\r\n              positive\r\n              disabled={disabled}\r\n              content=\"Submit\"\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authUser }, { match }) {\r\n  // const { question_id } = match.params;\r\n  // const question = questions[question_id];\r\n\r\n  return {\r\n    authUser\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { handleSaveQuestionAnswer }\r\n)(PollQuestion);\r\n// export default PollQuestion;\r\n"]},"metadata":{},"sourceType":"module"}