{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfani Media\\\\Desktop\\\\part3\\\\would-you-rather\\\\src\\\\components\\\\Result.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Header, Segment, Progress, Label, Button, Icon } from 'semantic-ui-react';\nimport { styles } from '../utils/helpers';\n\nconst YourVoteLabel = () => /*#__PURE__*/React.createElement(Label, {\n  color: \"orange\",\n  ribbon: \"right\",\n  className: \"vote\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Icon, {\n  name: \"check circle outline\",\n  size: \"big\",\n  className: \"compact\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    float: 'right'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, \"Your\", /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }\n}), \"Vote\"));\n\nexport class Result extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      this.props.history.push('/');\n    };\n  }\n\n  render() {\n    const {\n      question,\n      user\n    } = this.props;\n    const optionOneVotes = question.optionOne.votes.length;\n    const optionTwoVotes = question.optionTwo.votes.length;\n    const votesTotal = optionOneVotes + optionTwoVotes;\n    const userVote = user.answers[question.id];\n    let option1 = styles.secondary,\n        option2 = styles.secondary;\n\n    if (optionOneVotes > optionTwoVotes) {\n      option1 = styles.primary;\n    } else if (optionTwoVotes > optionOneVotes) {\n      option2 = styles.primary;\n    }\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Results:\", /*#__PURE__*/React.createElement(Header.Subheader, {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Would you rather\")), /*#__PURE__*/React.createElement(Segment, {\n      color: option1.color,\n      style: {\n        backgroundColor: `${option1.bgColor}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, userVote === 'optionOne' && /*#__PURE__*/React.createElement(YourVoteLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 40\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, question.optionOne.text), /*#__PURE__*/React.createElement(Progress, {\n      percent: (optionOneVotes / votesTotal * 100).toFixed(2),\n      progress: true,\n      color: option1.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, optionOneVotes, \" out of \", votesTotal, \" votes\")), /*#__PURE__*/React.createElement(Segment, {\n      color: option2.color,\n      style: {\n        backgroundColor: `${option2.bgColor}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, userVote === 'optionTwo' && /*#__PURE__*/React.createElement(YourVoteLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 40\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, question.optionTwo.text), /*#__PURE__*/React.createElement(Progress, {\n      percent: (optionTwoVotes / votesTotal * 100).toFixed(2),\n      progress: true,\n      color: option2.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, optionTwoVotes, \" out of \", votesTotal, \" votes\")), /*#__PURE__*/React.createElement(Button, {\n      size: \"tiny\",\n      floated: \"right\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, \"Back\"));\n  }\n\n}\nResult.propTypes = {\n  history: PropTypes.object.isRequired,\n  question: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps({\n  users,\n  authUser\n}) {\n  const user = users[authUser];\n  return {\n    user\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Result));","map":{"version":3,"sources":["C:/Users/Alfani Media/Desktop/part3/would-you-rather/src/components/Result.js"],"names":["React","Component","Fragment","PropTypes","withRouter","connect","Header","Segment","Progress","Label","Button","Icon","styles","YourVoteLabel","float","Result","handleClick","props","history","push","render","question","user","optionOneVotes","optionOne","votes","length","optionTwoVotes","optionTwo","votesTotal","userVote","answers","id","option1","secondary","option2","primary","fontWeight","color","backgroundColor","bgColor","text","toFixed","propTypes","object","isRequired","mapStateToProps","users","authUser"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Header,\r\n  Segment,\r\n  Progress,\r\n  Label,\r\n  Button,\r\n  Icon\r\n} from 'semantic-ui-react';\r\nimport { styles } from '../utils/helpers';\r\n\r\nconst YourVoteLabel = () => (\r\n  <Label color=\"orange\" ribbon=\"right\" className=\"vote\">\r\n    <Icon name=\"check circle outline\" size=\"big\" className=\"compact\" />\r\n    <div style={{ float: 'right' }}>\r\n      Your\r\n      <br />\r\n      Vote\r\n    </div>\r\n  </Label>\r\n);\r\n\r\nexport class Result extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    question: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired\r\n  };\r\n  handleClick = () => {\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { question, user } = this.props;\r\n    const optionOneVotes = question.optionOne.votes.length;\r\n    const optionTwoVotes = question.optionTwo.votes.length;\r\n    const votesTotal = optionOneVotes + optionTwoVotes;\r\n    const userVote = user.answers[question.id];\r\n\r\n    let option1 = styles.secondary,\r\n      option2 = styles.secondary;\r\n    if (optionOneVotes > optionTwoVotes) {\r\n      option1 = styles.primary;\r\n    } else if (optionTwoVotes > optionOneVotes) {\r\n      option2 = styles.primary;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header as=\"h3\">\r\n          Results:\r\n          <Header.Subheader style={{ fontWeight: 'bold' }}>\r\n            Would you rather\r\n          </Header.Subheader>\r\n        </Header>\r\n        <Segment\r\n          color={option1.color}\r\n          style={{ backgroundColor: `${option1.bgColor}` }}\r\n        >\r\n          {userVote === 'optionOne' && <YourVoteLabel />}\r\n          <p style={{ fontWeight: 'bold' }}>{question.optionOne.text}</p>\r\n          <Progress\r\n            percent={((optionOneVotes / votesTotal) * 100).toFixed(2)}\r\n            progress\r\n            color={option1.color}\r\n          >\r\n            {optionOneVotes} out of {votesTotal} votes\r\n          </Progress>\r\n        </Segment>\r\n        <Segment\r\n          color={option2.color}\r\n          style={{ backgroundColor: `${option2.bgColor}` }}\r\n        >\r\n          {userVote === 'optionTwo' && <YourVoteLabel />}\r\n\r\n          <p style={{ fontWeight: 'bold' }}>{question.optionTwo.text}</p>\r\n          <Progress\r\n            percent={((optionTwoVotes / votesTotal) * 100).toFixed(2)}\r\n            progress\r\n            color={option2.color}\r\n          >\r\n            {optionTwoVotes} out of {votesTotal} votes\r\n          </Progress>\r\n        </Segment>\r\n        {/* <Form.Field> */}\r\n        <Button size=\"tiny\" floated=\"right\" onClick={this.handleClick}>\r\n          Back\r\n        </Button>\r\n        {/* </Form.Field> */}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users, authUser }) {\r\n  const user = users[authUser];\r\n  return {\r\n    user\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Result));\r\n"]},"metadata":{},"sourceType":"module"}